// Generated by view binder compiler. Do not edit!
package com.example.msidecoder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.msidecoder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView barcodeTypeText;

  @NonNull
  public final TextView barcodeValueText;

  @NonNull
  public final TextView phaseInfoText;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final LinearLayout resultContainer;

  @NonNull
  public final View scanOverlay;

  @NonNull
  public final TextView statusText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView barcodeTypeText,
      @NonNull TextView barcodeValueText, @NonNull TextView phaseInfoText,
      @NonNull PreviewView previewView, @NonNull LinearLayout resultContainer,
      @NonNull View scanOverlay, @NonNull TextView statusText) {
    this.rootView = rootView;
    this.barcodeTypeText = barcodeTypeText;
    this.barcodeValueText = barcodeValueText;
    this.phaseInfoText = phaseInfoText;
    this.previewView = previewView;
    this.resultContainer = resultContainer;
    this.scanOverlay = scanOverlay;
    this.statusText = statusText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barcodeTypeText;
      TextView barcodeTypeText = ViewBindings.findChildViewById(rootView, id);
      if (barcodeTypeText == null) {
        break missingId;
      }

      id = R.id.barcodeValueText;
      TextView barcodeValueText = ViewBindings.findChildViewById(rootView, id);
      if (barcodeValueText == null) {
        break missingId;
      }

      id = R.id.phaseInfoText;
      TextView phaseInfoText = ViewBindings.findChildViewById(rootView, id);
      if (phaseInfoText == null) {
        break missingId;
      }

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.resultContainer;
      LinearLayout resultContainer = ViewBindings.findChildViewById(rootView, id);
      if (resultContainer == null) {
        break missingId;
      }

      id = R.id.scanOverlay;
      View scanOverlay = ViewBindings.findChildViewById(rootView, id);
      if (scanOverlay == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, barcodeTypeText, barcodeValueText,
          phaseInfoText, previewView, resultContainer, scanOverlay, statusText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
